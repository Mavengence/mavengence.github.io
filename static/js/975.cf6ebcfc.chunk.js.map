{"version":3,"file":"static/js/975.cf6ebcfc.chunk.js","mappings":"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","sources":["components/ui/RetroSection.js","../node_modules/react-intersection-observer/src/observe.ts","../node_modules/react-intersection-observer/src/InView.tsx","components/ui/RetroButton.js","components/Projects/Projects.js"],"sourcesContent":["import React from 'react';\nimport styled, { keyframes, css } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { InView } from 'react-intersection-observer';\nimport { COLORS, FONTS } from './Theme';\n\n// Define keyframes using the keyframes helper\nconst glitchAnimation = keyframes`\n  0%, 95% {\n    clip: rect(0, 9999px, 2px, 0);\n    transform: skew(0.2deg);\n  }\n  5%, 100% {\n    clip: rect(0, 9999px, 2px, 0);\n    transform: skew(0deg);\n  }\n  10% {\n    clip: rect(0, 9999px, 2px, 0);\n    transform: skew(-0.2deg);\n  }\n`;\n\nconst floatAnimation = keyframes`\n  0%, 100% { transform: translateY(0); }\n  50% { transform: translateY(-10px); }\n`;\n\nconst SectionContainer = styled.section`\n  padding: 8rem 0;\n  position: relative;\n  overflow: visible;\n  \n  /* Section connectors removed */\n`;\n\nconst SectionInner = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 2rem;\n  position: relative;\n  z-index: 20;\n`;\n\nconst titleBounce = keyframes`\n  0%, 100% { transform: translateY(0); }\n  50% { transform: translateY(-8px); }\n`;\n\nconst SectionTitle = styled(motion.h2)`\n  font-family: ${FONTS.title};\n  font-size: 5.5rem; /* Larger size */\n  font-weight: 900;\n  color: ${COLORS.hivePrimary}; /* Main color */\n  margin-bottom: 5rem;\n  text-align: center;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  position: relative;\n  -webkit-text-stroke: 0; /* Remove stroke */\n  \n  /* Real graffiti 3D style with multiple layers */\n  text-shadow: none; /* Remove glow */\n  \n  /* Three staggered shadows for real 3D depth */\n  &:before, &:after {\n    content: attr(data-text);\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n  }\n  \n  /* First shadow layer - blue */\n  &:before {\n    color: #3182CE; /* Blue */\n    transform: translate(-8px, 8px);\n    z-index: -2;\n    transition: transform 0.3s ease;\n  }\n  \n  /* Second shadow layer - red */\n  &:after {\n    color: #E53E3E; /* Red */\n    transform: translate(-15px, 15px);\n    z-index: -3;\n    transition: transform 0.3s ease;\n  }\n  \n  /* Create one more shadow for depth with an element */\n  span {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    text-align: center;\n    color: #000;\n    transform: translate(-4px, 4px);\n    z-index: -1;\n    transition: transform 0.3s ease;\n  }\n  \n  /* Slow up and down hover animation */\n  animation: ${titleBounce} 8s ease-in-out infinite;\n  \n  /* No background clip, more authentic */\n  background: none;\n  \n  @media (max-width: 768px) {\n    font-size: 4rem;\n  }\n\n  @media (max-width: 480px) {\n    font-size: 3.2rem;\n  }\n`;\n\nconst SectionContent = styled(motion.div)`\n  position: relative;\n  z-index: 2;\n`;\n\n// Grid background with 3D hip-hop style - layered on top of app grid\nconst GridBackground = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: \n    repeating-linear-gradient(\n      45deg,\n      ${props => props.color || COLORS.hivePrimary}03 0px,\n      ${props => props.color || COLORS.hivePrimary}03 2px,\n      transparent 2px,\n      transparent 10px\n    );\n  z-index: 1;\n  pointer-events: none;\n  opacity: ${props => props.opacity || \"0.15\"};\n  \n  /* More subtle diamond pattern */\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-image: \n      linear-gradient(45deg, ${props => props.color || COLORS.hivePrimary}05 25%, transparent 25%),\n      linear-gradient(-45deg, ${props => props.color || COLORS.hivePrimary}05 25%, transparent 25%),\n      linear-gradient(45deg, transparent 75%, ${props => props.color || COLORS.hivePrimary}05 75%),\n      linear-gradient(-45deg, transparent 75%, ${props => props.color || COLORS.hivePrimary}05 75%);\n    background-size: 60px 60px;\n    background-position: 0 0, 0 30px, 30px -30px, -30px 0px;\n    opacity: 0.3;\n  }\n`;\n\n// Floating decoration element\nconst FloatingElement = styled.div`\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  background: ${COLORS.hivePrimary};\n  border: 3px solid #000;\n  z-index: 5;\n  animation: ${floatAnimation} 6s ease-in-out infinite;\n  box-shadow: 4px 4px 0 rgba(0, 0, 0, 0.2);\n  opacity: 0.6;\n  \n  &.square {\n    right: 10%;\n    top: 15%;\n    transform: rotate(15deg);\n  }\n  \n  &.circle {\n    left: 8%;\n    bottom: 20%;\n    border-radius: 50%;\n    animation-delay: 1s;\n  }\n  \n  &.triangle {\n    right: 15%;\n    bottom: 15%;\n    clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\n    animation-delay: 2s;\n  }\n`;\n\nconst RetroSection = ({ \n  title, \n  children, \n  background, \n  titleColor, \n  underlineColor,\n  underlineSecondary,\n  glowColor,\n  gridColor,\n  gridOpacity,\n  id,\n  className,\n  ...props \n}) => {\n  return (\n    <SectionContainer \n      id={id} \n      background={background} \n      className={className || ''} \n      {...props}\n    >\n      <GridBackground color={gridColor} opacity={gridOpacity} />\n      \n      {/* Floating decorative elements removed */}\n      \n      <SectionInner>\n        <InView threshold={0.2} triggerOnce>\n          {({ ref, inView }) => (\n            <>\n              {title && (\n                <SectionTitle\n                  ref={ref}\n                  color={titleColor}\n                  data-text={title}\n                  initial={{ opacity: 0, y: -20 }}\n                  animate={inView ? { opacity: 1, y: 0 } : {}}\n                  transition={{ \n                    duration: 0.8, \n                    type: \"spring\",\n                    stiffness: 100\n                  }}\n                  className=\"section-title\"\n                >\n                  <span data-text={title}>{title}</span>\n                  {title}\n                </SectionTitle>\n              )}\n              <SectionContent\n                initial={{ opacity: 0, y: 30 }}\n                animate={inView ? { opacity: 1, y: 0 } : {}}\n                transition={{ \n                  duration: 0.8, \n                  delay: 0.2,\n                  type: \"spring\",\n                  stiffness: 80\n                }}\n              >\n                {children}\n              </SectionContent>\n            </>\n          )}\n        </InView>\n      </SectionInner>\n    </SectionContainer>\n  );\n};\n\nexport default RetroSection;","import type { ObserverInstanceCallback } from \"./index\";\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit[\"root\"]) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === \"root\"\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    // biome-ignore lint/style/useConst: It's fine to use let here, as we are going to assign it later\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === \"undefined\" &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from \"react\";\nimport type { IntersectionObserverProps, PlainChildrenProps } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== \"function\";\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import React from 'react';\nimport styled, { keyframes, css } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { COLORS, FONTS } from './Theme';\n\n// Define movingGradient animation using keyframes helper\nconst movingGradient = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`;\n\nconst ButtonContainer = styled(motion.button)`\n  display: inline-block;\n  font-family: ${FONTS.secondary};\n  font-size: 0.85rem;\n  padding: 0.6rem 1rem;\n  margin: 0.5rem;\n  color: ${props => props.color || COLORS.white};\n  background-color: transparent;\n  border: 2px solid ${props => props.color || COLORS.hivePrimary};\n  border-radius: 0;\n  position: relative;\n  text-transform: uppercase;\n  text-shadow: 0 0 5px ${props => props.color || COLORS.hivePrimary};\n  overflow: hidden;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  letter-spacing: 1px;\n  \n  /* Pixelated border with custom color */\n  &:before {\n    content: '';\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    right: -2px;\n    bottom: -2px;\n    background: linear-gradient(90deg, \n      ${props => props.color || COLORS.hivePrimary},\n      ${props => props.secondaryColor || COLORS.hiveSecondary},\n      ${props => props.color || COLORS.hivePrimary}\n    );\n    background-size: 200% 100%;\n    z-index: -1;\n    animation: ${movingGradient} 3s ease infinite;\n  }\n  \n  &:after {\n    content: '';\n    position: absolute;\n    top: 2px;\n    left: 2px;\n    right: 2px;\n    bottom: 2px;\n    background: ${COLORS.hiveDarkBg};\n    z-index: -1;\n  }\n  \n  /* For social buttons with icons */\n  svg {\n    margin-right: ${props => props.iconOnly ? '0' : '8px'};\n    font-size: ${props => props.iconOnly ? '1.2rem' : '1rem'};\n  }\n  \n  /* Icon only style */\n  ${props => props.iconOnly && `\n    width: 42px;\n    height: 42px;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  `}\n  \n  &:hover {\n    color: ${COLORS.white};\n    text-shadow: 0 0 8px ${props => props.color || COLORS.hivePrimary}, \n                 0 0 12px ${props => props.secondaryColor || COLORS.hiveSecondary};\n    transform: translateY(-2px);\n    \n    &:before {\n      animation-duration: 1s;\n    }\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n  \n  /* Animation is defined with keyframes helper outside the component */\n`;\n\nconst RetroButton = ({ \n  children, \n  color, \n  secondaryColor,\n  iconOnly = false,\n  onClick, \n  ...props \n}) => {\n  return (\n    <ButtonContainer\n      color={color}\n      secondaryColor={secondaryColor}\n      iconOnly={iconOnly}\n      onClick={onClick}\n      whileTap={{ scale: 0.95 }}\n      transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n      className=\"retro-button\"\n      {...props}\n    >\n      {children}\n    </ButtonContainer>\n  );\n};\n\nexport default RetroButton;","/**\n * Projects Component\n * ===================================\n * \n * HOW TO ADD A NEW PROJECT:\n * \n * 1. Go to the projectsData array (around line 170)\n * 2. Add a new object with the following properties:\n *    - title: The name of your project\n *    - description: A brief description\n *    - gradient: Choose from GRADIENT_PRESETS or create your own\n *    - technologies: Array of technologies used (will be displayed as tags)\n *    - actions: Array of buttons (at least one should have primary: true)\n * \n * EXAMPLE:\n * {\n *   title: 'My Awesome Project',\n *   description: 'This project does amazing things with data',\n *   gradient: GRADIENT_PRESETS.BLUE, // Or any other preset\n *   technologies: ['Python', 'TensorFlow', 'React'],\n *   actions: [\n *     { label: 'Demo', url: 'https://demo-link.com', primary: true },\n *     { label: 'GitHub', url: 'https://github.com/username/repo', primary: false }\n *   ]\n * }\n * \n * The grid layout will automatically adjust based on the number of projects!\n */\n\nimport React from 'react';\nimport styled, { css, keyframes } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { InView } from 'react-intersection-observer';\nimport RetroSection from '../ui/RetroSection';\nimport RetroButton from '../ui/RetroButton';\nimport { COLORS, FONTS } from '../ui/Theme';\n\n// Modern, minimalist contemporary styling\nconst ProjectsContainer = styled.div`\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem 1.5rem;\n`;\n\n// Clean grid layout without decorative elements\nconst ProjectsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  grid-auto-rows: minmax(100px, auto);\n  gap: 2rem;\n  \n  @media (max-width: 992px) {\n    grid-template-columns: repeat(6, 1fr);\n    gap: 1.5rem;\n  }\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    gap: 2rem;\n  }\n`;\n\n// Define a pulsing animation\nconst pulseGlow = keyframes`\n  0% { box-shadow: 0 0 10px 0px rgba(255, 255, 255, 0.1); }\n  50% { box-shadow: 0 0 16px 4px rgba(255, 255, 255, 0.15); }\n  100% { box-shadow: 0 0 10px 0px rgba(255, 255, 255, 0.1); }\n`;\n\n// Modern minimalist card with glass effect\n// Forward declarations to resolve styling dependencies\nconst ProjectImageStyles = css`\n  &:after {\n    background: rgba(0, 0, 0, 0.35);\n  }\n  transform: scale(1.02);\n`;\n\nconst ProjectTitleStyles = css`\n  transform: scale(1.02);\n  text-shadow: 0px 2px 8px rgba(0, 0, 0, 0.7), 0px 4px 10px rgba(0, 0, 0, 0.5);\n`;\n\nconst ProjectBannerStyles = css`\n  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.4);\n  filter: brightness(1.1);\n`;\n\nconst ProjectTagStyles = css`\n  background: rgba(255, 255, 255, 0.15);\n`;\n\n// Modern minimalist card with glass effect\nconst ProjectCard = styled(motion.div)`\n  position: relative;\n  background: rgba(22, 22, 26, 0.8);\n  border-radius: 12px;\n  overflow: hidden;\n  backdrop-filter: blur(8px);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  min-height: 480px; /* Increased to accommodate content with line breaks */\n  max-height: 550px; /* Increased maximum height for consistency */\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  \n  &:hover {\n    transform: translateY(-5px) scale(1.01);\n    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2), 0 0 0 1px rgba(255, 255, 255, 0.15);\n    \n    &:after {\n      opacity: 1;\n      animation: ${pulseGlow} 2s infinite ease-in-out;\n    }\n    \n    /* Apply hover styles to child components */\n    .project-image {\n      ${ProjectImageStyles}\n    }\n    \n    .project-title {\n      ${ProjectTitleStyles}\n    }\n    \n    .project-banner {\n      ${ProjectBannerStyles}\n    }\n    \n    .project-tag {\n      ${ProjectTagStyles}\n    }\n  }\n  \n  /* Digital glow effect container */\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 12px;\n    opacity: 0;\n    transition: opacity 0.3s ease;\n    pointer-events: none;\n    z-index: -1;\n  }\n  \n  @media (max-width: 768px) {\n    min-height: 430px;\n  }\n`;\n\n// Project banner component\nconst ProjectBanner = styled.div`\n  position: absolute;\n  top: ${props => props.isLong ? '25px' : '20px'};\n  right: ${props => props.isLong ? '-45px' : '-35px'};\n  background: ${props => props.color || '#FF4081'};\n  color: white;\n  font-size: ${props => props.isLong ? '0.65rem' : '0.7rem'};\n  font-weight: 600;\n  padding: 5px ${props => props.isLong ? '50px' : '40px'};\n  transform: rotate(45deg);\n  z-index: 10;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);\n  font-family: ${FONTS.accent};\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n  width: ${props => props.isLong ? '180px' : 'auto'};\n  text-align: center;\n  transition: all 0.4s ease;\n  \n  ${ProjectCard}:hover & {\n    box-shadow: 0 3px 8px rgba(0, 0, 0, 0.4);\n    filter: brightness(1.1);\n  }\n`;\n\n// Clean image area with subtle gradient overlay\nconst ProjectImage = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 200px; /* Increased height to accommodate wrapped titles */\n  min-height: 200px;\n  background: ${props => props.gradient || `linear-gradient(135deg, #3182CE, #63B3ED)`};\n  position: relative;\n  overflow: hidden;\n  padding: 1.5rem;\n  box-sizing: border-box;\n  text-align: center;\n  transition: all 0.5s ease;\n  \n  /* Add a semi-transparent overlay for better title readability */\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.45);\n    z-index: 1;\n    transition: background 0.5s ease;\n  }\n  \n  /* Hover effect is applied in ProjectCard's hover state */\n`;\n\n// Project title\nconst ProjectTitle = styled.h3`\n  color: white;\n  font-family: ${FONTS.title};\n  font-size: 1.2rem;\n  font-weight: 700;\n  margin: 0;\n  z-index: 2;\n  width: 100%;\n  text-align: center;\n  /* Text shadow for better readability */\n  text-shadow: 0px 2px 4px rgba(0, 0, 0, 0.5), 0px 4px 8px rgba(0, 0, 0, 0.35);\n  \n  /* Allow natural wrapping without ellipsis */\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  hyphens: auto;\n  line-height: 1.4;\n  max-height: 5.6em; /* 4 lines of text (1.4 × 4) */\n  transition: transform 0.4s ease, text-shadow 0.4s ease;\n  \n  @media (max-width: 768px) {\n    font-size: 1.1rem;\n  }\n`;\n\n// Clean content area\nconst ProjectContent = styled.div`\n  padding: 1.25rem;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  justify-content: space-between;\n  overflow: hidden;\n  \n  @media (max-width: 768px) {\n    padding: 1rem;\n  }\n`;\n\n// Modern tag pills\nconst ProjectTags = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n  margin-bottom: 1rem;\n  min-height: 30px;\n  overflow-y: auto;\n  max-height: 75px;\n  scrollbar-width: thin;\n  scrollbar-color: rgba(255, 255, 255, 0.1) transparent;\n  \n  &::-webkit-scrollbar {\n    width: 4px;\n    height: 4px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: transparent;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(255, 255, 255, 0.1);\n    border-radius: 10px;\n  }\n`;\n\n// Modern rounded tag pills\nconst ProjectTag = styled.span`\n  font-size: 0.6rem;\n  padding: 0.2rem 0.5rem;\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  font-family: ${FONTS.accent};\n  font-weight: 500;\n  letter-spacing: 0.3px;\n  border-radius: 10px;\n  transition: all 0.3s ease;\n  margin-bottom: 4px;\n  white-space: nowrap;\n  \n  &:hover {\n    background: rgba(255, 255, 255, 0.2);\n    transform: translateY(-2px);\n  }\n`;\n\n// Clean description text\nconst ProjectDescription = styled.div`\n  color: rgba(255, 255, 255, 0.8);\n  line-height: 1.6;\n  margin-bottom: 1.5rem;\n  font-family: ${FONTS.primary};\n  font-size: 0.9rem;\n  flex: 1;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  hyphens: auto;\n  max-width: 100%;\n  min-height: 80px;\n  max-height: 120px;\n  overflow-y: auto;\n  scrollbar-width: thin;\n  scrollbar-color: rgba(255, 255, 255, 0.1) transparent;\n  padding-right: 5px;\n  \n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: transparent;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(255, 255, 255, 0.1);\n    border-radius: 10px;\n  }\n  \n  br {\n    line-height: 1.6;\n  }\n  \n  @media (max-width: 768px) {\n    min-height: 60px;\n    max-height: 100px;\n    font-size: 0.85rem;\n  }\n`;\n\n// Action buttons container\nconst ProjectActions = styled.div`\n  display: flex;\n  gap: 0.75rem;\n  \n  @media (max-width: 480px) {\n    flex-direction: column;\n  }\n`;\n\nconst ProjectButton = styled.button`\n  background: ${props => props.primary ? 'rgba(59, 130, 246, 0.9)' : 'rgba(255, 255, 255, 0.1)'};\n  color: white;\n  font-family: ${FONTS.accent};\n  font-size: 0.8rem;\n  padding: 0.6rem 1rem;\n  border-radius: 6px;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  backdrop-filter: blur(4px);\n  font-weight: 500;\n  \n  &:hover {\n    transform: translateY(-2px);\n    background: ${props => props.primary ? 'rgba(59, 130, 246, 1)' : 'rgba(255, 255, 255, 0.15)'};\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n`;\n\n// Gradient presets to make it easy to add new projects\n// Simply select a preset or define your own custom gradient\nconst GRADIENT_PRESETS = {\n  BLUE: 'linear-gradient(135deg, #3182CE, #4299E1)',\n  INDIGO: 'linear-gradient(135deg, #4F46E5, #6366F1)',\n  PINK: 'linear-gradient(135deg, #EC4899, #F472B6)',\n  GREEN: 'linear-gradient(135deg, #10B981, #34D399)',\n  YELLOW: 'linear-gradient(135deg, #F59E0B, #FBBF24)',\n  PURPLE: 'linear-gradient(135deg, #7C3AED, #8B5CF6)',\n  TEAL: 'linear-gradient(135deg, #14B8A6, #2DD4BF)',\n  RED: 'linear-gradient(135deg, #EF4444, #F87171)',\n  ORANGE: 'linear-gradient(135deg, #F97316, #FB923C)',\n  CYAN: 'linear-gradient(135deg, #06B6D4, #22D3EE)',\n};\n\n/**\n * Projects Data - Row-Based Layout System\n * =======================================\n * \n * HOW TO ADD A NEW PROJECT:\n * 1. Add your project to the desired row (row1, row2, row3, etc.)\n * 2. Each row can have 1-3 projects\n * 3. The layout will automatically adjust based on the number of projects in each row:\n *    - 1 project in a row: Will be centered and take up 66% of the width\n *    - 2 projects in a row: Will be evenly distributed across the row\n *    - 3 projects in a row: Will be evenly distributed (each taking 1/3 of the space)\n * 4. If you need to add a new row, simply create a new array (row4, row5, etc.)\n * \n * EXAMPLE:\n * row4: [\n *   {\n *     title: 'My New Project',\n *     description: 'Amazing project description',\n *     gradient: GRADIENT_PRESETS.TEAL,\n *     technologies: ['React', 'Node.js', 'MongoDB'],\n *     actions: [\n *       { label: 'Demo', url: 'https://example.com', primary: true },\n *       { label: 'GitHub', url: 'https://github.com/example', primary: false }\n *     ]\n *   }\n * ]\n */\n\n// Projects organized by rows - each row can have 1-3 projects\nconst projectsByRow = {\n  // First row\n  row1: [\n    {\n      title: 'AI trend analysis in German<br>business and politics:<br>a web mining approach',\n      description: 'This study analyzes AI trends in German business and politics (1998–2020) using web mining and ML.<br><br>It detects AI evolution, faster adoption in business, and increasing political discourse, leveraging 1.07M documents.',\n      gradient: GRADIENT_PRESETS.BLUE,\n      technologies: ['Artificial intelligence', 'Web mining', 'Trend detection', 'Topic clustering', 'Business', 'Politics'],\n      actions: [\n        { label: 'Paper', url: 'https://link.springer.com/article/10.1007/s41060-023-00483-9', primary: true }\n      ],\n      banner: { text: 'Paper', color: '#3182CE' }\n    },\n    {\n      title: 'AI trend analysis on healthcare podcasts using topic modeling and sentiment <br> analysis: a data-driven approach',\n      description: 'This study analyzes AI trends in healthcare podcasts (2015–2021) using web mining and ML. It detects AI evolution, identifies 14 topic clusters, and examines sentiment and trend dynamics.',\n      gradient: GRADIENT_PRESETS.INDIGO,\n      technologies: ['Artificial intelligence', 'Web mining', 'Trend detection', 'Topic clustering', 'PyTorch', 'Python', 'Sentiment Analysis'],\n      actions: [\n        { label: 'Paper', url: 'https://link.springer.com/article/10.1007/s12065-023-00878-4', primary: true }\n      ],\n      banner: { text: 'Paper', color: '#4F46E5' }\n    }\n  ],\n  \n  // Second row\n  row2: [\n    {\n      title: 'Identifying a Trial <br> Population for Clinical Studies <br> on Diabetes Drug Testing with Neural Networks',\n      description: 'This project models an end-to-end AI workflow for clinical use, predicting hospitalization time for diabetes patients using neural networks and Explainable AI, aiding doctors in patient selection.',\n      gradient: GRADIENT_PRESETS.PINK,\n      technologies: ['Machine Learning', 'EDA', 'Data Analysis'],\n      actions: [\n        { label: 'Paper', url: 'https://dl.gi.de/server/api/core/bitstreams/833fe83a-27fa-48fa-8f79-f9cf4895f1ca/content', primary: true },\n        { label: 'GitHub', url: 'https://github.com/Mavengence/Machine_Learning_in_the_Industry_4.0_Seminar_SS2020.FAU', primary: false }\n      ],\n      banner: { text: 'Best Paper Award', color: '#EC4899', isLong: true }\n    },\n    {\n      title: 'Style Classification in Posters',\n      description: 'Created an interactive dashboard for analyzing customer purchase patterns and product affinities for a retail client.',\n      gradient: GRADIENT_PRESETS.GREEN,\n      technologies: ['LDA ', 'Neural Networks', 'PyTorch', 'BERT', 'Museum', 'Clustering'],\n      actions: [\n        { label: 'Report', url: 'https://drive.google.com/file/d/1llobxdJ98EvebOEH6b372VrMSvc4p0mg/view?usp=sharing', primary: true },\n        { label: 'GitHub', url: 'https://github.com/Mavengence/Style-Classification-in-Posters', primary: false }\n      ]\n    },\n    {\n      title: 'Representation Learning for Gait Analysis in Parkinson Patients',\n      description: 'This project evaluates deep learning architectures for Parkinsons classification using raw sensor data. A ResNet autoencoder achieved 87% accuracy, as a decision support tool for doctors.',\n      gradient: GRADIENT_PRESETS.YELLOW,\n      technologies: ['Computer Vision', 'PyTorch', 'Timeseries'],\n      actions: [\n        { label: 'Report', url: 'https://drive.google.com/file/d/1CwGOKzVPtgz1A5zVJXehEHIk7snWR_cI/view?usp=sharing', primary: true },\n        { label: 'GitHub', url: 'https://github.com/Mavengence/Representation-Learning-for-Gait-Analysis-in-Parkinson-s-Patients', primary: false }\n      ]\n    }\n  ],\n  \n  // Third row\n  row3: [\n    {\n      title: 'Masterthesis: <br> AI Trend Detection in Healthcare by applying Topic Clustering and Sentiment Analysis using Podcast Data',\n      description: 'This thesis explores AI trend detection in healthcare podcasts (2015–2021) using speech-to-text, topic clustering, and sentiment analysis. It identifies 14 trending topics and develops a tool for filtering relevant discussions.',\n      gradient: GRADIENT_PRESETS.ORANGE,\n      technologies: ['Artificial intelligence', 'NLP', 'BERT', 'Web mining', 'Trend detection', 'Topic clustering', 'PyTorch', 'Python', 'Sentiment Analysis'],\n      actions: [\n        { label: 'Thesis', url: 'https://drive.google.com/file/d/13fBq7cbFENh3P6NSFUtC5ROXlaYpaHok/view?usp=sharing', primary: true },\n        { label: 'Presentation', url: 'https://drive.google.com/file/d/1CEw7Icy97BMWJfAVU_q-VCswe2eEaCrP/view?usp=sharing', primary: false }\n      ]\n    }\n  ]\n};\n\n// Process the project data from each row, adding row and position information\nconst processProjects = () => {\n  let allProjects = [];\n  let id = 1;\n  \n  // Iterate through each row\n  Object.entries(projectsByRow).forEach(([rowKey, rowProjects]) => {\n    // Get the row number from the key (e.g., \"row1\" → 1)\n    const rowNumber = parseInt(rowKey.replace('row', ''));\n    \n    // Add projects from this row with their position information\n    rowProjects.forEach((project, index) => {\n      allProjects.push({\n        id: id++,\n        row: rowNumber,\n        positionInRow: index,\n        projectsInRow: rowProjects.length,\n        ...project\n      });\n    });\n  });\n  \n  return allProjects;\n};\n\nconst projects = processProjects();\n\n/**\n * Projects Component\n * \n * This component displays all projects in a responsive grid layout.\n * The grid automatically adapts to the number of projects without needing manual adjustment.\n */\nconst Projects = () => {\n  /**\n   * Dynamic Grid Placement\n   * \n   * This function automatically calculates grid placement based on the index and total project count.\n   * It creates an aesthetically pleasing layout regardless of how many projects are in the array.\n   */\n  /**\n   * Get Grid Placement\n   * This function determines where each project card should be placed in the grid\n   * based on its row and position within that row\n   */\n  const getGridPlacement = (project) => {\n    // Safe check for SSR (server-side rendering)\n    if (typeof window === 'undefined') {\n      return { gridColumn: '1 / span 4', gridRow: 'auto' };\n    }\n    \n    // Mobile layout - single column\n    if (window.innerWidth <= 768) {\n      return { \n        gridColumn: '1 / span 1', \n        gridRow: 'auto',\n        marginBottom: '2rem'\n      };\n    }\n    \n    // Tablet layout - 2 columns\n    if (window.innerWidth <= 992) {\n      return { \n        gridColumn: project.positionInRow % 2 === 0 ? '1 / span 3' : '4 / span 3', \n        gridRow: `${Math.floor(project.positionInRow / 2) + project.row} / span 1`\n      };\n    }\n    \n    // Desktop layout - based on number of projects in the row\n    const { row, positionInRow, projectsInRow } = project;\n    \n    // Row with 1 project - centered (wider card)\n    if (projectsInRow === 1) {\n      return { \n        gridColumn: '3 / span 8', \n        gridRow: `${row} / span 1`\n      };\n    }\n    \n    // Row with 2 projects - evenly distributed\n    if (projectsInRow === 2) {\n      return { \n        gridColumn: positionInRow === 0 ? '2 / span 5' : '7 / span 5', \n        gridRow: `${row} / span 1`\n      };\n    }\n    \n    // Row with 3 projects - evenly distributed (each gets 1/3 of the space)\n    return { \n      gridColumn: `${positionInRow * 4 + 1} / span 4`, \n      gridRow: `${row} / span 1`\n    };\n  };\n  \n  // No helper function needed anymore, the grid placement logic is now self-contained\n  \n  return (\n    <RetroSection \n      id=\"projects\"\n      title=\"PROJECTS\"\n      titleColor=\"#3182CE\" // Modern blue for section title\n      gridColor=\"#3182CE\"\n      gridOpacity=\"0.05\" // Subtle grid\n      className=\"projects-section\"\n    >\n      <ProjectsContainer>\n        {/* Grid layout automatically adjusts based on rows and projects per row */}\n        <ProjectsGrid>\n          {/* Sort projects by row to ensure proper rendering order */}\n          {projects\n            .sort((a, b) => a.row - b.row || a.positionInRow - b.positionInRow)\n            .map((project, index) => (\n              <InView threshold={0.1} triggerOnce key={project.id}>\n                {({ ref, inView }) => (\n                  <ProjectCard \n                    ref={ref}\n                    initial={{ opacity: 0, y: 30 }}\n                    animate={inView ? { opacity: 1, y: 0 } : {}}\n                    transition={{ \n                      duration: 0.5, \n                      delay: index * 0.08,\n                      ease: \"easeOut\"\n                    }}\n                    style={getGridPlacement(project)}\n                  >\n                    {project.banner && (\n                      <ProjectBanner \n                        color={project.banner.color}\n                        isLong={project.banner.isLong}\n                        className=\"project-banner\"\n                      >\n                        {project.banner.text}\n                      </ProjectBanner>\n                    )}\n                    <ProjectImage gradient={project.gradient} className=\"project-image\">\n                      <ProjectTitle \n                        dangerouslySetInnerHTML={{ __html: project.title }}\n                        className=\"project-title\"\n                      />\n                    </ProjectImage>\n                    \n                    <ProjectContent>\n                      <ProjectTags>\n                        {project.technologies.map((tech, idx) => (\n                          <ProjectTag \n                            key={idx}\n                            className=\"project-tag\"\n                          >\n                            {tech}\n                          </ProjectTag>\n                        ))}\n                      </ProjectTags>\n                      \n                      <ProjectDescription\n                        dangerouslySetInnerHTML={{ __html: project.description }}\n                      />\n                      \n                      <ProjectActions>\n                        {project.actions.map((action, idx) => (\n                          <ProjectButton\n                            key={idx}\n                            primary={action.primary}\n                            onClick={() => window.open(action.url, '_blank')}\n                          >\n                            {action.label}\n                          </ProjectButton>\n                        ))}\n                      </ProjectActions>\n                    </ProjectContent>\n                  </ProjectCard>\n                )}\n              </InView>\n            ))}\n        </ProjectsGrid>\n      </ProjectsContainer>\n    </RetroSection>\n  );\n};\n\nexport default Projects;"],"names":["keyframes","floatAnimation","SectionContainer","styled","section","SectionInner","div","titleBounce","SectionTitle","motion","h2","FONTS","title","COLORS","hivePrimary","SectionContent","GridBackground","props","color","opacity","_ref","children","background","titleColor","underlineColor","underlineSecondary","glowColor","gridColor","gridOpacity","id","className","_jsxs","_jsx","InView","threshold","triggerOnce","_ref2","ref","inView","_Fragment","initial","y","animate","transition","duration","type","stiffness","delay","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","filter","key","map","root","has","set","toString","get","observe","element","callback","arguments","length","undefined","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","time","boundingClientRect","intersectionRect","rootBounds","observer","elements","instance","thresholds","entries","forEach","entry","_a","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","delete","unobserve","size","disconnect","React","constructor","super","__publicField","node","this","skip","setState","initialInView","observeNode","isPlainChildren","onChange","state","componentDidMount","componentDidUpdate","prevProps","rootMargin","componentWillUnmount","_unobserveCb","handleChange","render","handleNode","as","movingGradient","ProjectsContainer","button","secondary","white","secondaryColor","hiveSecondary","hiveDarkBg","iconOnly","ProjectsGrid","pulseGlow","ProjectImageStyles","css","ProjectTitleStyles","ProjectBannerStyles","ProjectTagStyles","ProjectCard","ProjectBanner","isLong","accent","ProjectImage","gradient","ProjectTitle","h3","ProjectContent","ProjectTags","ProjectTag","span","ProjectDescription","primary","ProjectActions","ProjectButton","projectsByRow","row1","description","technologies","actions","label","url","banner","text","row2","row3","projects","processProjects","allProjects","rowKey","rowProjects","rowNumber","parseInt","replace","project","index","row","positionInRow","projectsInRow","Projects","getGridPlacement","gridColumn","gridRow","innerWidth","marginBottom","Math","floor","RetroSection","a","b","ease","style","dangerouslySetInnerHTML","__html","tech","idx","action","onClick","open"],"sourceRoot":""}